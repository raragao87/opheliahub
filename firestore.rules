rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read/write their own data
    match /users/{userId}/{document=**} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow access to shared profiles
    match /sharedProfiles/{profileId} {
      allow read, write: if request.auth != null && 
        (resource.data.sharedWith[request.auth.uid] != null || 
         resource.data.ownerId == request.auth.uid);
    }
    
    // Allow access to sharing invitations
    match /sharingInvitations/{invitationId} {
      allow read, write: if request.auth != null && 
        (resource.data.fromUserId == request.auth.uid || 
         resource.data.toUserEmail == request.auth.token.email);
    }
    
    // Fallback rule for development (remove in production)
    match /{document=**} {
      allow read, write: if request.time < timestamp.date(2025, 9, 1);
    }
  }
}